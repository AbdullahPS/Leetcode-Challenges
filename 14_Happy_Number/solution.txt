function isHappy(n: number): boolean {

    
      const map = new Map();

    const  recurseFunc=(num:number):boolean=>{
        if(num==1){
            return true;
        }
        else if(map.has(num)){
            return false;
        }

        else {
            let sum:number=0;
            num.toString().split('').forEach(el=>sum+=parseInt(el)**2)
                                             
            map.set(num,num)

            return recurseFunc(sum)

        }
            

        }
        return recurseFunc(n);
};

/*
1. create a map to check in future if we already have used this values
2. Create a function which takes the number as the input
2.1 If the number is equal to 1 return true go to 3
2.2 check if the number is in the map
2.2.1 If th number is in the map we already reached this point and contuniering leads to infinite loop so return false go to 3
2.2.2 if its not in the map go to 2.3
2.3 create a varable named sum and initialize it with 0 
2.3 Get the number and split its numbers in order to conver it to  astring and being able to loop into it
2.4 For every splitted number convert it to an integer and square it
2.5 add its squared value to the sum variable
2.6 add the sum to the map
2.7 go to 2.1
3. end
*/
